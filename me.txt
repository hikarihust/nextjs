                                        Giới thiệu NextJs
            
Tìm hiểu cấu trúc ứng dụng NextJs đầu tiên
    Lệnh tạo project: 
        npx create-next-app first-project-nextjs 
    Cài đặt yarn: 
        npm install -g yarn
    Một số lệnh
        npm run dev
            Starts the development server.
        npm run build
            Builds the app for production.
        npm start
            Runs the built app in production mode.
    npm run dev
    Cấu trúc thư mục 
    Mặc định trang chủ là:  pages/index.js 
    pages/api/ Là nơi có thể code backend(nodejs)
        http://localhost:3000/api/hello
        http://localhost:3000/user

Deploy ứng dụng NextJs đầu tiên
    Create new app: first-nextjs
    Tab Deploy:
        GitHub
        Connect to GitHub
    Connect to GitHub
        repo-name: first-nextjs
    Choose a branch to deploy:
        master 
        -> Deploy branch
    View 
    Application error
        Edit package.json: "start": "next start -p $PORT"
    https://first-nextjs.herokuapp.com/

=============================================================================================
                            Tìm hiểu NextJs cơ bản

Cài đặt và tích hợp Typescript với NextJs và React 
    npm install --save-dev typescript @types/react @types/node
    yarn dev
    Khi sử dụng typescript thì các file liên quan(index.js...) thì đều có thể sử dụng song song 
        cả javascript và typescript tuy nhiên khi làm dự án thực tế thì thường đổi lại đuôi của các 
        file đó:
        Dùng typescript: js -> ts
        File nào dùng cú pháp của jsx(các file liên quan đến Component): js -> tsx
            index.tsx
            user.tsx
        pages/api/hello.ts 
Tìm hiểu về khái niệm Pages trong NextJs
Tìm hiểu Dynamic Route
    admin/user/[id]
Tìm hiểu Routing Basic
    Lấy được tham số ở trên đường dẫn 
Tìm hiểu Static File Serving và cách cài đặt
Custom lại Webpack và cách dùng File loader 
    Custom Webpack Config
    https://webpack.js.org/concepts/#loaders
    npm install url-loader --save-dev
    zeit config plugins
        https://github.com/vercel/next-plugins
        next-images
        npm install --save next-images
    npm remove url-loader
Custom App Component và CSS Module Support
    pageProps = {
       users: [],
       posts: [],
       isLogin: true 
    }
    {...pageProps}
        users = pageProps.users
        posts = pageProps.posts
        isLogin = pageProps.isLogin
    Sass Support
        npm install --save @zeit/next-sass node-sass
        https://github.com/vercel/next-plugins
    module.exports = withImages(
        withSass()
    )
Custom App Component và Typescript
    Khai báo Custom App theo kiểu Typescript -> Khai báo thêm kiểu cho App 
    App: Có thể khai báo theo kiểu Class và function Component

=============================================================================================
                            Life Cycle, React Hooks và ứng dụng
            
Ôn tập Life Cycle cơ bản trong Class Component
    state: Là data của Component, do chính nó quản lý
    props: Là data của 2 nơi khác truyền vào cho nó, nó chỉ nhận thôi, không thể thay đổi
Cách sử dụng State Hooks và so sánh
    